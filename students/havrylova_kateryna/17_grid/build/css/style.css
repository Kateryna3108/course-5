@font-face {
  font-family: "Delius Unicase";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/delius-unicase-v26-latin-regular.woff2") format("woff2");
}

body {
  font-family: "Delius Unicase", Arial, Helvetica, sans-serif;
  background-color: #fff;
  font-size: 36px;
  margin: 0 auto;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.col-1 {
  max-width: 8.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 8.3333333333%;
  flex-basis: 8.3333333333%;
}

.col-2 {
  max-width: 16.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 16.6666666667%;
  flex-basis: 16.6666666667%;
}

.col-3 {
  max-width: 25%;
  width: 100%;
  -ms-flex-preferred-size: 25%;
  flex-basis: 25%;
}

.col-4 {
  max-width: 33.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 33.3333333333%;
  flex-basis: 33.3333333333%;
}

.col-5 {
  max-width: 41.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 41.6666666667%;
  flex-basis: 41.6666666667%;
}

.col-6 {
  max-width: 50%;
  width: 100%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.col-7 {
  max-width: 58.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 58.3333333333%;
  flex-basis: 58.3333333333%;
}

.col-8 {
  max-width: 66.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 66.6666666667%;
  flex-basis: 66.6666666667%;
}

.col-9 {
  max-width: 75%;
  width: 100%;
  -ms-flex-preferred-size: 75%;
  flex-basis: 75%;
}

.col-10 {
  max-width: 83.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 83.3333333333%;
  flex-basis: 83.3333333333%;
}

.col-11 {
  max-width: 91.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 91.6666666667%;
  flex-basis: 91.6666666667%;
}

.col-12 {
  max-width: 100%;
  width: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.grid {
  height: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
  grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
  grid-template-columns: -webkit-max-content -webkit-max-content;
  grid-template-columns: max-content max-content;
  grid-template-columns: -webkit-min-content -webkit-min-content;
  grid-template-columns: min-content min-content;
  grid-template-columns: minmax(auto, 300px) 100px;
  grid-template-columns: minmax(300px, auto) 100px;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: 250px 250px;
  grid-template-rows: -webkit-min-content 1fr minmax(250px, auto);
  grid-template-rows: min-content 1fr minmax(250px, auto);
  grid-auto-rows: 100px;
  -webkit-column-gap: 50px;
  -moz-column-gap: 50px;
  column-gap: 50px;
  row-gap: 10px;
  gap: 10px 50;
  gap: 30px;
  grid-template-columns: repeat(3, 150px);
  grid-template-rows: repeat(3, 150px);
}

.grid__item {
  padding: 15px;
  background-color: lightgray;
  border: 1px solid gray;
}

.grid__item:nth-child(4) {
  grid-column: 1/span 2;
  grid-row: 2/span 2;
}

.grid__item:nth-child(3) {
  grid-row: 1/-1;
}

.page {
  padding: 15px;
  max-width: 1200px;
}

img {
  width: 100%;
  border-radius: 20px;
}

.logo {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: aqua;
}

.menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.menu__link {
  display: inline-block;
  padding: 15px;
}

.aside {
  grid-area: aside;
}

.main {
  grid-area: main;
}

.blog {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
  padding-top: 120px;
  margin-bottom: 120px;
}

.blog__title {
  grid-column: 1/-1;
  text-align: center;
  margin-bottom: 80px;
}

.blog__item-col2 {
  grid-column: span 2;
}

.blog__item-row2 {
  grid-row: span 2;
}

.blog-article {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-radius: 20px;
  overflow: hidden;
}

.blog-article__img {
  background: -webkit-gradient(linear, left bottom, left top, from(#241F24), color-stop(34.11%, rgba(91, 91, 91, 0.45)), color-stop(62.5%, rgba(187, 186, 192, 0.26)));
  background: linear-gradient(0deg, #241F24 0%, rgba(91, 91, 91, 0.45) 34.11%, rgba(187, 186, 192, 0.26) 62.5%);
  opacity: 0.8;
  cursor: pointer;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
