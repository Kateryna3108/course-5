@font-face {
  font-family: "Roboto";
  font-size: normal;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-regular.woff2") format("woff2");
}
body {
  background-color: lightgray;
  font-family: "Roboto", Arial, Helvetica, sans-serif;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.col-1 {
  max-width: 16.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 16.6666666667%;
  flex-basis: 16.6666666667%;
}

.col-2 {
  max-width: 33.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 33.3333333333%;
  flex-basis: 33.3333333333%;
}

.col-3 {
  max-width: 50%;
  width: 100%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.col-4 {
  max-width: 66.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 66.6666666667%;
  flex-basis: 66.6666666667%;
}

.col-5 {
  max-width: 83.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 83.3333333333%;
  flex-basis: 83.3333333333%;
}

.col-6 {
  max-width: 100%;
  width: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

input {
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  clip: rect(0, 0, 0, 0) !important;
  margin: -1px !important;
}
input::-webkit-input-placeholder {
  color: red;
  font-size: 15px;
}
input::-moz-placeholder {
  color: red;
  font-size: 15px;
}
input:-ms-input-placeholder {
  color: red;
  font-size: 15px;
}
input:-moz-placeholder {
  color: red;
  font-size: 15px;
}

.menu__wrapper, .header .serach__fields {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.logo {
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.header .container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.header .serach {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.header .serach__fields {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}
.header .logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  font-size: 50px;
  background-color: aqua;
}
.header .logo + .search {
  padding: 15px;
}
.header > .menu {
  background-color: red;
}
.header .menu {
  padding: 15px;
}
.header .menu__wrapper {
  list-style-type: none;
}
.header .menu__link {
  font-size: 25px;
}
.header .menu__link:hover {
  color: red;
}
.header .menu__link::after {
  content: " sdsfdf";
}

.active .menu__link {
  color: red;
}

.menu__item:hover + .menu__item .menu__link {
  color: green;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
